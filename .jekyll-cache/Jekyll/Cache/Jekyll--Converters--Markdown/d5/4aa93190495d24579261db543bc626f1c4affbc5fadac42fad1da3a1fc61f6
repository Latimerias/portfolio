I"µ<h2 id="debugging">Debugging</h2>

<h4 id="viewport-stuck-loading">Viewport stuck loading</h4>

<p>Working with large assets like a building for archviz shaders and geometry can get heavy and I have the constant issue that the viewport will hang up and I get the spinning gear at the top right of the viewport that never stops. Sometimes this can be caused by bad geometry or textures but other times it seems that solaris just needs a very specific kick. What has worked for me so far is every time my viewport gets stuck I deactivate all my shaders with a Prune LOP and then create a new scene view tab. I then bypass the material prune and start rendering again.</p>

<h4 id="black-line-material-artifacts-on-karma-xpu">Black line material artifacts on karma XPU</h4>

<h2 id="if-your-materials-have-black-lines-showing-up-on-them-it-is-possibly-from-non-power-of-2-textures-which-i-personally-experienced-and-all-you-have-to-do-is-edit-them-to-powers-of-2-and-you-are-good-to-go-i-found-this-problem-only-on-karma-xpu-not-cpu">If your materials have black lines showing up on them it is possibly from non power of 2 textures, which I personally experienced and all you have to do is edit them to powers of 2 and you are good to go. I found this problem only on karma XPU not CPU.</h2>

<h2 id="handling-large-scenes"><strong>Handling Large Scenes</strong></h2>

<h4 id="composition-and-visibility-performance">Composition and Visibility Performance</h4>

<p>With large scenes the goal is to limit objects in the viewport so you can develop specific elements.</p>

<p>There are 5 ways you can limit prims in the viewport which are population masks, payloads, activations, visibility and muting. Before diving in it is necessary to understand the basics of USD. A Stage is the scene graph tree generated by the composition engine when you open an USD file. The compositon engine composites layers based on a their opinions to create the final stage and exists only during runtime.</p>

<p>Visibility can be accessed via the Prune LOP and the scene graph tree. Visibility turns off prims in the viewport and hydra but they are still loaded in the composition arc meaning that as far as the composition engine is concerned it is still there and can be manipulated which also means that it adds one more layer for the composition engine to process every time. The upside is that it allows for creative flexibility in the viewport and at render time.</p>

<p>Population masks can be accessed via the Configure Stage LOP or through the scene graph tree. Population masks remove all costs from prims that have not been specified, which sounds great but the downside is it acts globally on your scene graph. When you create a population mask the list of prim paths are saved and those are the only prims allowed in your stage, all other prims will be masked out regardless if they are after you create the mask. The population mask method is a show only method meaning you do not have the option to say show all exepct X prims. This mask is applied to a UsdStage meaning it is not something that is saved to disk. Because population masks completely ignore non-specified prims you will need to know your prim paths or have them preset to benefit. A use case could be if you have just saved out a large USD file for lets say an environment and you reference it into a new stage but it is too heavy. What you would do is place a Configure Stage LOP <strong>BEFORE</strong> the reference LOP and set the prims you want to load, now the reference lop sees the mask and only loads those primitves.</p>

<p>Activiation can be accessed via the Prune LOP or the scene graph tree. When you deactivate a prim USD ignores it completely similar to population masks but does not create a stage wide mask. A deactivation workflow could be you reference in a large scene and place a Prune LOP after the reference and deactivate some prims. Notice how since the Prune is placed after the reference if you click on the Reference LOP the heavy scene file will try to load unlike with population masks.</p>

<p>Payloads can be accessed via the Sublayer LOP and the Configure Stage LOP. Payloads allow you to sublayer a USD file without any payloads loaded but still access the scene graph hierarchy, this means the only cost comes from composing ancestor/parent prims which are not unloaded. The downside of payloads is that it can require a lot of extra setup as when a payload is unloaded all of its children are unloaded which means that if you have an asset with many components, each component needs to be defined as a payload for it to be unloaded specifically. As of now I do not know how to auto authorize geometry as payloads when imported by path attributes as to avoid having to individually importing each component. Because of their flexibility Payloads are ideal if you can set up for them in advance and should always be an adequate amount of optimization.</p>

<p>Muting works on the level of layers only and ignores the layer completely from USD.</p>

:ET